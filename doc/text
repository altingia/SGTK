---1
Здраствуйте. Меня зовут Оля Черникова и 
в 5 семестре я продолжала мой совместный 
проект с Егором Щербеным про построение 
графа связей геномных последовательностей 
по ридам ДНК и РНК. 
Мой научный руководитель "--- Андрей Пржибельский. 

---2
Одной из задач биоинформатике является 
сборка генома. По разным причинам 
получается собрать только какие-то его 
части. Эти части называются контигами. 
Цель проекта "--- востановить порядок 
этих контигов. 

---3
Какие задачи нужно было решить с прошлого семестра? 
В прошлом семестре Егор начал использовать риды РНК
для построения графа. Одной из основных задач было 
развить эту тему. 

Далее, хотелось, что бы была возможность 
объединять разные способы 
построения, например, по ридам ДНК и РНК
в одном графе. 

В 4 семестре, фильтрация графа была параллельно 
с построением, и была проблема 
правильного подбора парамметров отсечения. 

Так же, одной из задач было создание 
программного продукта, в котором
сможет разобраться кто-то еще, кроме меня.   

---4
Теперь поговорим о решение поставленных задач. 
Одним из основных архитектурных решений было разделить 
построение графа и его фильтрации на две независимых 
программы. То есть сначала на сервере строится полный 
граф без всяких фильраций. Граф сохраняется в 
определенном виде в файлик. 

Далее, уже на локальном компьютере можно 
подбирать разные способы фильтрации и 
сразу же выводить граф разными способами. 

ContigGraph - это внутрений способо представления графа. 

---5
Теперь о части построения графа. Есть класс
GraphControl, в нем осуществляется парсинг аргументов, 
а так же в нем хранится граф контигов, который 
последовательно передается 
разным наследникам класса GraphBuilder, 
а они уже его достраивают каждый по 
своим правилам. Так же при построение 
графа осуществляется вспомогательный вывод. Для 
каждого ребра в отдельный файл выводятся все 
риды из-за которых это ребро появилось. 


---6
Какие используются способы построения графа? По парным 
ридам ДНК, про них уже было рассказано в прошлом семестре. 
По парным ридам РНК, по разделившимся ридам РНК и по эталонной сборке. 

Последнее, это когда у нас уже есть сборка геному и есть контиги, и 
нужно для того, что бы анализировать какие связи верные, какие нет и 
зная, какие связи ошибочные, есть возможность придумать, 
как их отсекать от настоящих. 

Про построения связей по ридам РНК и в целом про РНК. Вот есть 
ДНК. Из ДНК у нас есть какое-то количество контигов. Жизнь так устроена, что из фрагмента ДНК получается премРНК, а дальше какие-то 
части вырезаются и получается РНК. 

Теперь, с РНК считываются риды. В том числе там могут быть парные 
риды. Для парных ридов мы знаем расстояние между ними и в каком 
порядке они друг за другом идут. Так же есть риды попавшие на 
стык экзонов. Теперь, если выравнить риды РНК на наши контиги, можно 
узнать в каком порядке идут контиги. Есть некоторая проблема с выраниванием радов на стыке экзонов. Это делается двумя способами. 
Первое - разделить рид на две равные части и выранить каждую из половин. 
Второе - выравнить рид и отрезать не выравненный хвост и хвосты выранить отдельно. 

---7
Вторая программа про фильтрацию графа. Поговорим о том, как она устроена. Здесь так же имеется три независимых подзадачи. Первая - 
парсинг команд и понимания что нужно запускать. В этой части для 
реализации испльзовался паттерн команда. Другая подзадача разные фильтрации графа. Здесь используется идея, что одна фильтрация находится внутри другой и про внутрение филтрации ничего не знает, 
а использует их интерфейс. Если нужно поменять настройки фильтрации, 
то запрос передается по цепной реакции. Класс смотрит, 
может ли он обработать запрос и если не может, то передает 
дальше. И последняя не менее важная задача - это вывод графа. 
Наследники Writer это разные способы вывода и Writer принимает 
для вывода объект Filter и выводит его в dot формате. 
 
---8
Результатом стало приложение для построения графа по многим 
библиотекам и разными способами. Приложение для фильтрации
и отрисовки графа различными способами. Так же 
удалось улучшить сборку C.elegans при помощи соединения
вместе с некоторым пропуском контиги, которые однозначно находятся 
друг за другом.  

---9
Программа была написано на C++. Для 
оброботки геномных файлов использовалась 
библиотека SeqAn. Gtest - библиотека для 
тестирования приложения. В качестве вспомогательных 
программ для выравнивания использовались 
STAR, nucmer и bowtie2. QUAST приложение, 
которое используется для анализа качества сборки и 
Tablet был необходим для визуализации выранивания. 

--10
Планы на следующий семестр. Разобраться с проблемами при 
построение графа для других организмов. Например, для A.thaliana.
Ускорить приложение, а так же придумать и реализовать алгоритмы поиска
путей в графе для улучшения сборки. 

--11
Спасибо за внимани! Вопросы? 

